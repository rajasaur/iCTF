/*
	SDZTrackerAppSoapService.m
	The implementation classes and methods for the TrackerAppSoapService web service.
	Generated by SudzC.com
*/

#import "SDZTrackerAppSoapService.h"
				
#import "Soap.h"
	
#import "SDZWebServiceFault.h"
#import "SDZInvalidSessionFault.h"
#import "SDZNoSuchObjectFault.h"
#import "SDZPermissionDeniedFault.h"
#import "SDZSystemFault.h"
#import "SDZVersionMismatchFault.h"
#import "SDZIllegalArgumentFault.h"
#import "SDZInvalidOperationFault.h"
#import "SDZDependencyViolationFault.h"
#import "SDZWorkflowViolationFault.h"
#import "SDZInconsistentFieldValueFault.h"
#import "SDZPlanningFolderRuleViolationFault.h"
#import "SDZInvalidRankFault.h"
#import "SDZObjectAlreadyExistsFault.h"
#import "SDZInvalidFilterFault.h"
#import "SDZFolderSoapList.h"
#import "SDZSearchQuerySyntaxFault.h"
#import "SDZNoSuchRelationshipFault.h"
#import "SDZArrayOf_xsd_string.h"
#import "SDZArrayOf_tns1_TrackerFieldValueSoapDO.h"
#import "SDZArrayOf_tns1_TrackerFieldSoapDO.h"
#import "SDZArrayOf_xsd_anyType.h"
#import "SDZArrayOf_tns1_ArtifactDependencySoapRow.h"
#import "SDZArrayOf_tns1_SoapFilter.h"
#import "SDZArrayOf_tns1_ArtifactSoapRow.h"
#import "SDZArrayOf_tns1_SoapSortKey.h"
#import "SDZArrayOf_tns1_ArtifactDetailSoapRow.h"
#import "SDZArrayOf_tns1_TrackerSoapRow.h"
#import "SDZArrayOf_tns1_WorkflowTransitionSoapRow.h"
#import "SDZArrayOf_tns1_OrderedTrackerFieldSoapRow.h"
#import "SDZArtifactDependencySoapList.h"
#import "SDZArtifactSoapList.h"
#import "SDZTrackerSoapList.h"
#import "SDZWorkflowTransitionSoapList.h"
#import "SDZOrderedTrackerFieldSoapList.h"
#import "SDZFolderSoapRow.h"
#import "SDZArtifactDependencySoapRow.h"
#import "SDZTrackerFieldSoapDO.h"
#import "SDZArtifactSoapDO.h"
#import "SDZSoapNamedValues.h"
#import "SDZSoapFilter.h"
#import "SDZSoapSortKey.h"
#import "SDZArtifactDetailSoapList.h"
#import "SDZOrderedTrackerFieldSoapRow.h"
#import "SDZArtifactSoapRow.h"
#import "SDZSoapFieldValues.h"
#import "SDZItemSoapDO.h"
#import "SDZTrackerSoapDO.h"
#import "SDZArtifactDetailSoapRow.h"
#import "SDZTrackerFieldValueSoapDO.h"
#import "SDZTrackerSoapRow.h"
#import "SDZWorkflowTransitionSoapRow.h"
#import "SDZFolderSoapDO.h"
#import "SDZObjectSoapDO.h"

/* Implementation of the service */
				
@implementation SDZTrackerAppSoapService

	- (id) init
	{
		if(self = [super init])
		{
			self.serviceUrl = @"http://localhost:8080/ce-soap60/services/TrackerApp";
			self.namespace = @"http://schema.open.collab.net/sfee50/soap60/service";
			self.headers = nil;
			self.logging = NO;
		}
		return self;
	}
	
	- (id) initWithUsername: (NSString*) username andPassword: (NSString*) password {
		if(self = [super initWithUsername:username andPassword:password]) {
		}
		return self;
	}
	
	+ (SDZTrackerAppSoapService*) service {
		return [SDZTrackerAppSoapService serviceWithUsername:nil andPassword:nil];
	}
	
	+ (SDZTrackerAppSoapService*) serviceWithUsername: (NSString*) username andPassword: (NSString*) password {
		return [[[SDZTrackerAppSoapService alloc] initWithUsername:username andPassword:password] autorelease];
	}

		
	/* Returns SDZArrayOf_tns1_TrackerFieldSoapDO*.  */
	- (SoapRequest*) getFields: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
	{
		return [self getFields: handler action: nil sessionId: sessionId trackerId: trackerId];
	}

	- (SoapRequest*) getFields: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getFields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArrayOf_tns1_TrackerFieldSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId objectId: (NSString*) objectId fieldData: (SDZTrackerFieldSoapDO*) fieldData
	{
		return [self setField: handler action: nil sessionId: sessionId objectId: objectId fieldData: fieldData];
	}

	- (SoapRequest*) setField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId objectId: (NSString*) objectId fieldData: (SDZTrackerFieldSoapDO*) fieldData
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: objectId forName: @"objectId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldData forName: @"fieldData"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) copyWorkflowTransitions: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId srcTrackerId: (NSString*) srcTrackerId dstTrackerId: (NSString*) dstTrackerId
	{
		return [self copyWorkflowTransitions: handler action: nil sessionId: sessionId srcTrackerId: srcTrackerId dstTrackerId: dstTrackerId];
	}

	- (SoapRequest*) copyWorkflowTransitions: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId srcTrackerId: (NSString*) srcTrackerId dstTrackerId: (NSString*) dstTrackerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: srcTrackerId forName: @"srcTrackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: dstTrackerId forName: @"dstTrackerId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"copyWorkflowTransitions" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId objectId: (NSString*) objectId fieldId: (NSString*) fieldId
	{
		return [self deleteField: handler action: nil sessionId: sessionId objectId: objectId fieldId: fieldId];
	}

	- (SoapRequest*) deleteField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId objectId: (NSString*) objectId fieldId: (NSString*) fieldId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: objectId forName: @"objectId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldId forName: @"fieldId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactSoapDO*.  */
	- (SoapRequest*) createArtifact: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId title: (NSString*) title description: (NSString*) description group: (NSString*) group category: (NSString*) category status: (NSString*) status customer: (NSString*) customer priority: (int) priority estimatedEffort: (int) estimatedEffort remainingEffort: (int) remainingEffort autosumming: (BOOL) autosumming points: (int) points assignedUsername: (NSString*) assignedUsername releaseId: (NSString*) releaseId planningFolderId: (NSString*) planningFolderId flexFields: (SDZSoapFieldValues*) flexFields attachmentFileName: (NSString*) attachmentFileName attachmentMimeType: (NSString*) attachmentMimeType attachmentFileId: (NSString*) attachmentFileId
	{
		return [self createArtifact: handler action: nil sessionId: sessionId trackerId: trackerId title: title description: description group: group category: category status: status customer: customer priority: priority estimatedEffort: estimatedEffort remainingEffort: remainingEffort autosumming: autosumming points: points assignedUsername: assignedUsername releaseId: releaseId planningFolderId: planningFolderId flexFields: flexFields attachmentFileName: attachmentFileName attachmentMimeType: attachmentMimeType attachmentFileId: attachmentFileId];
	}

	- (SoapRequest*) createArtifact: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId title: (NSString*) title description: (NSString*) description group: (NSString*) group category: (NSString*) category status: (NSString*) status customer: (NSString*) customer priority: (int) priority estimatedEffort: (int) estimatedEffort remainingEffort: (int) remainingEffort autosumming: (BOOL) autosumming points: (int) points assignedUsername: (NSString*) assignedUsername releaseId: (NSString*) releaseId planningFolderId: (NSString*) planningFolderId flexFields: (SDZSoapFieldValues*) flexFields attachmentFileName: (NSString*) attachmentFileName attachmentMimeType: (NSString*) attachmentMimeType attachmentFileId: (NSString*) attachmentFileId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: title forName: @"title"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: description forName: @"description"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: group forName: @"group"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: category forName: @"category"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: status forName: @"status"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: customer forName: @"customer"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: priority] forName: @"priority"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: estimatedEffort] forName: @"estimatedEffort"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: remainingEffort] forName: @"remainingEffort"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: autosumming] forName: @"autosumming"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: points] forName: @"points"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: assignedUsername forName: @"assignedUsername"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: releaseId forName: @"releaseId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: planningFolderId forName: @"planningFolderId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: flexFields forName: @"flexFields"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentFileName forName: @"attachmentFileName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentMimeType forName: @"attachmentMimeType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentFileId forName: @"attachmentFileId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createArtifact" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactSoapDO*.  */
	- (SoapRequest*) getArtifactData: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
	{
		return [self getArtifactData: handler action: nil sessionId: sessionId artifactId: artifactId];
	}

	- (SoapRequest*) getArtifactData: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactId forName: @"artifactId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getArtifactData" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setArtifactData: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactData: (SDZArtifactSoapDO*) artifactData comment: (NSString*) comment attachmentFileName: (NSString*) attachmentFileName attachmentMimeType: (NSString*) attachmentMimeType attachmentFileId: (NSString*) attachmentFileId
	{
		return [self setArtifactData: handler action: nil sessionId: sessionId artifactData: artifactData comment: comment attachmentFileName: attachmentFileName attachmentMimeType: attachmentMimeType attachmentFileId: attachmentFileId];
	}

	- (SoapRequest*) setArtifactData: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactData: (SDZArtifactSoapDO*) artifactData comment: (NSString*) comment attachmentFileName: (NSString*) attachmentFileName attachmentMimeType: (NSString*) attachmentMimeType attachmentFileId: (NSString*) attachmentFileId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactData forName: @"artifactData"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: comment forName: @"comment"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentFileName forName: @"attachmentFileName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentMimeType forName: @"attachmentMimeType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: attachmentFileId forName: @"attachmentFileId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setArtifactData" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZTrackerSoapDO*.  */
	- (SoapRequest*) getTrackerData: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
	{
		return [self getTrackerData: handler action: nil sessionId: sessionId trackerId: trackerId];
	}

	- (SoapRequest*) getTrackerData: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getTrackerData" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZTrackerSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setTrackerData: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerData: (SDZTrackerSoapDO*) trackerData
	{
		return [self setTrackerData: handler action: nil sessionId: sessionId trackerData: trackerData];
	}

	- (SoapRequest*) setTrackerData: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerData: (SDZTrackerSoapDO*) trackerData
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerData forName: @"trackerData"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setTrackerData" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addDateField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate helpText: (NSString*) helpText
	{
		return [self addDateField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName isRequired: isRequired isDisabled: isDisabled isHiddenOnCreate: isHiddenOnCreate helpText: helpText];
	}

	- (SoapRequest*) addDateField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate helpText: (NSString*) helpText
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isRequired] forName: @"isRequired"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isDisabled] forName: @"isDisabled"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isHiddenOnCreate] forName: @"isHiddenOnCreate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addDateField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteArtifact: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
	{
		return [self deleteArtifact: handler action: nil sessionId: sessionId artifactId: artifactId];
	}

	- (SoapRequest*) deleteArtifact: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactId forName: @"artifactId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteArtifact" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactSoapDO*.  */
	- (SoapRequest*) moveArtifact: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId targetFolderId: (NSString*) targetFolderId newAssignee: (NSString*) newAssignee
	{
		return [self moveArtifact: handler action: nil sessionId: sessionId artifactId: artifactId targetFolderId: targetFolderId newAssignee: newAssignee];
	}

	- (SoapRequest*) moveArtifact: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId targetFolderId: (NSString*) targetFolderId newAssignee: (NSString*) newAssignee
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactId forName: @"artifactId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: targetFolderId forName: @"targetFolderId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: newAssignee forName: @"newAssignee"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"moveArtifact" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactDependencySoapList*.  */
	- (SoapRequest*) getParentDependencyList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
	{
		return [self getParentDependencyList: handler action: nil sessionId: sessionId artifactId: artifactId];
	}

	- (SoapRequest*) getParentDependencyList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactId forName: @"artifactId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getParentDependencyList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactDependencySoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactDependencySoapList*.  */
	- (SoapRequest*) getChildDependencyList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
	{
		return [self getChildDependencyList: handler action: nil sessionId: sessionId artifactId: artifactId];
	}

	- (SoapRequest*) getChildDependencyList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId artifactId: (NSString*) artifactId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artifactId forName: @"artifactId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getChildDependencyList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactDependencySoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) setArtifactRank: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId planningFolderId: (NSString*) planningFolderId artfToRankId: (NSString*) artfToRankId artfBeforeId: (NSString*) artfBeforeId artfAfterId: (NSString*) artfAfterId
	{
		return [self setArtifactRank: handler action: nil sessionId: sessionId planningFolderId: planningFolderId artfToRankId: artfToRankId artfBeforeId: artfBeforeId artfAfterId: artfAfterId];
	}

	- (SoapRequest*) setArtifactRank: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId planningFolderId: (NSString*) planningFolderId artfToRankId: (NSString*) artfToRankId artfBeforeId: (NSString*) artfBeforeId artfAfterId: (NSString*) artfAfterId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: planningFolderId forName: @"planningFolderId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artfToRankId forName: @"artfToRankId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artfBeforeId forName: @"artfBeforeId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: artfAfterId forName: @"artfAfterId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"setArtifactRank" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZTrackerSoapDO*.  */
	- (SoapRequest*) createTracker: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId projectId: (NSString*) projectId trackerName: (NSString*) trackerName trackerTitle: (NSString*) trackerTitle trackerDescription: (NSString*) trackerDescription icon: (NSString*) icon
	{
		return [self createTracker: handler action: nil sessionId: sessionId projectId: projectId trackerName: trackerName trackerTitle: trackerTitle trackerDescription: trackerDescription icon: icon];
	}

	- (SoapRequest*) createTracker: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId projectId: (NSString*) projectId trackerName: (NSString*) trackerName trackerTitle: (NSString*) trackerTitle trackerDescription: (NSString*) trackerDescription icon: (NSString*) icon
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectId forName: @"projectId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerName forName: @"trackerName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerTitle forName: @"trackerTitle"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerDescription forName: @"trackerDescription"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: icon forName: @"icon"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createTracker" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZTrackerSoapDO alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addSeparator: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId separatorType: (NSString*) separatorType separatorLabel: (NSString*) separatorLabel
	{
		return [self addSeparator: handler action: nil sessionId: sessionId trackerId: trackerId separatorType: separatorType separatorLabel: separatorLabel];
	}

	- (SoapRequest*) addSeparator: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId separatorType: (NSString*) separatorType separatorLabel: (NSString*) separatorLabel
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: separatorType forName: @"separatorType"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: separatorLabel forName: @"separatorLabel"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addSeparator" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactSoapList*.  */
	- (SoapRequest*) getArtifactList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId containerId: (NSString*) containerId filters: (SDZArrayOf_tns1_SoapFilter*) filters
	{
		return [self getArtifactList: handler action: nil sessionId: sessionId containerId: containerId filters: filters];
	}

	- (SoapRequest*) getArtifactList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId containerId: (NSString*) containerId filters: (SDZArrayOf_tns1_SoapFilter*) filters
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: containerId forName: @"containerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: filters forName: @"filters"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getArtifactList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) createArtifactDependency: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId originId: (NSString*) originId targetId: (NSString*) targetId desc: (NSString*) desc
	{
		return [self createArtifactDependency: handler action: nil sessionId: sessionId originId: originId targetId: targetId desc: desc];
	}

	- (SoapRequest*) createArtifactDependency: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId originId: (NSString*) originId targetId: (NSString*) targetId desc: (NSString*) desc
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: originId forName: @"originId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: targetId forName: @"targetId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: desc forName: @"desc"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"createArtifactDependency" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactDetailSoapList*.  */
	- (SoapRequest*) getArtifactDetailList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId selectedColumns: (SDZArrayOf_xsd_string*) selectedColumns filters: (SDZArrayOf_tns1_SoapFilter*) filters sortKeys: (SDZArrayOf_tns1_SoapSortKey*) sortKeys startIndex: (int) startIndex maxRows: (int) maxRows exceptionIfExpiredCache: (BOOL) exceptionIfExpiredCache forceNewQuery: (BOOL) forceNewQuery
	{
		return [self getArtifactDetailList: handler action: nil sessionId: sessionId trackerId: trackerId selectedColumns: selectedColumns filters: filters sortKeys: sortKeys startIndex: startIndex maxRows: maxRows exceptionIfExpiredCache: exceptionIfExpiredCache forceNewQuery: forceNewQuery];
	}

	- (SoapRequest*) getArtifactDetailList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId selectedColumns: (SDZArrayOf_xsd_string*) selectedColumns filters: (SDZArrayOf_tns1_SoapFilter*) filters sortKeys: (SDZArrayOf_tns1_SoapSortKey*) sortKeys startIndex: (int) startIndex maxRows: (int) maxRows exceptionIfExpiredCache: (BOOL) exceptionIfExpiredCache forceNewQuery: (BOOL) forceNewQuery
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: selectedColumns forName: @"selectedColumns"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: filters forName: @"filters"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: sortKeys forName: @"sortKeys"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: startIndex] forName: @"startIndex"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: maxRows] forName: @"maxRows"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: exceptionIfExpiredCache] forName: @"exceptionIfExpiredCache"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: forceNewQuery] forName: @"forceNewQuery"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getArtifactDetailList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactDetailSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZTrackerSoapList*.  */
	- (SoapRequest*) getTrackerList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId projectId: (NSString*) projectId
	{
		return [self getTrackerList: handler action: nil sessionId: sessionId projectId: projectId];
	}

	- (SoapRequest*) getTrackerList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId projectId: (NSString*) projectId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectId forName: @"projectId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getTrackerList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZTrackerSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addTextField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayColumns: (int) displayColumns displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate defaultValue: (NSString*) defaultValue helpText: (NSString*) helpText pattern: (NSString*) pattern
	{
		return [self addTextField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName displayColumns: displayColumns displayLines: displayLines isRequired: isRequired isDisabled: isDisabled isHiddenOnCreate: isHiddenOnCreate defaultValue: defaultValue helpText: helpText pattern: pattern];
	}

	- (SoapRequest*) addTextField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayColumns: (int) displayColumns displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate defaultValue: (NSString*) defaultValue helpText: (NSString*) helpText pattern: (NSString*) pattern
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: displayColumns] forName: @"displayColumns"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: displayLines] forName: @"displayLines"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isRequired] forName: @"isRequired"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isDisabled] forName: @"isDisabled"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isHiddenOnCreate] forName: @"isHiddenOnCreate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: defaultValue forName: @"defaultValue"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: pattern forName: @"pattern"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addTextField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addSingleSelectField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate fieldValues: (SDZArrayOf_xsd_string*) fieldValues defaultValue: (NSString*) defaultValue helpText: (NSString*) helpText
	{
		return [self addSingleSelectField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName isRequired: isRequired isDisabled: isDisabled isHiddenOnCreate: isHiddenOnCreate fieldValues: fieldValues defaultValue: defaultValue helpText: helpText];
	}

	- (SoapRequest*) addSingleSelectField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate fieldValues: (SDZArrayOf_xsd_string*) fieldValues defaultValue: (NSString*) defaultValue helpText: (NSString*) helpText
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isRequired] forName: @"isRequired"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isDisabled] forName: @"isDisabled"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isHiddenOnCreate] forName: @"isHiddenOnCreate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldValues forName: @"fieldValues"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: defaultValue forName: @"defaultValue"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addSingleSelectField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addMultiSelectField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate fieldValues: (SDZArrayOf_xsd_string*) fieldValues defaultValues: (SDZArrayOf_xsd_string*) defaultValues helpText: (NSString*) helpText
	{
		return [self addMultiSelectField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName displayLines: displayLines isRequired: isRequired isDisabled: isDisabled isHiddenOnCreate: isHiddenOnCreate fieldValues: fieldValues defaultValues: defaultValues helpText: helpText];
	}

	- (SoapRequest*) addMultiSelectField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate fieldValues: (SDZArrayOf_xsd_string*) fieldValues defaultValues: (SDZArrayOf_xsd_string*) defaultValues helpText: (NSString*) helpText
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: displayLines] forName: @"displayLines"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isRequired] forName: @"isRequired"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isDisabled] forName: @"isDisabled"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isHiddenOnCreate] forName: @"isHiddenOnCreate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldValues forName: @"fieldValues"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: defaultValues forName: @"defaultValues"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addMultiSelectField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addUserSelectField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate defaultValues: (SDZArrayOf_xsd_string*) defaultValues userFilter: (NSString*) userFilter helpText: (NSString*) helpText
	{
		return [self addUserSelectField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName displayLines: displayLines isRequired: isRequired isDisabled: isDisabled isHiddenOnCreate: isHiddenOnCreate defaultValues: defaultValues userFilter: userFilter helpText: helpText];
	}

	- (SoapRequest*) addUserSelectField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName displayLines: (int) displayLines isRequired: (BOOL) isRequired isDisabled: (BOOL) isDisabled isHiddenOnCreate: (BOOL) isHiddenOnCreate defaultValues: (SDZArrayOf_xsd_string*) defaultValues userFilter: (NSString*) userFilter helpText: (NSString*) helpText
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithInt: displayLines] forName: @"displayLines"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isRequired] forName: @"isRequired"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isDisabled] forName: @"isDisabled"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: isHiddenOnCreate] forName: @"isHiddenOnCreate"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: defaultValues forName: @"defaultValues"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: userFilter forName: @"userFilter"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addUserSelectField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactSoapList*.  */
	- (SoapRequest*) findArtifacts: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId queryString: (NSString*) queryString projectId: (NSString*) projectId searchAttachments: (BOOL) searchAttachments
	{
		return [self findArtifacts: handler action: nil sessionId: sessionId queryString: queryString projectId: projectId searchAttachments: searchAttachments];
	}

	- (SoapRequest*) findArtifacts: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId queryString: (NSString*) queryString projectId: (NSString*) projectId searchAttachments: (BOOL) searchAttachments
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: queryString forName: @"queryString"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: projectId forName: @"projectId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: [NSNumber numberWithBool: searchAttachments] forName: @"searchAttachments"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"findArtifacts" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns SDZWorkflowTransitionSoapList*.  */
	- (SoapRequest*) getAllowedWorkflowTransitionList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
	{
		return [self getAllowedWorkflowTransitionList: handler action: nil sessionId: sessionId trackerId: trackerId];
	}

	- (SoapRequest*) getAllowedWorkflowTransitionList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getAllowedWorkflowTransitionList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZWorkflowTransitionSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) removeArtifactDependency: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId originId: (NSString*) originId targetId: (NSString*) targetId
	{
		return [self removeArtifactDependency: handler action: nil sessionId: sessionId originId: originId targetId: targetId];
	}

	- (SoapRequest*) removeArtifactDependency: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId originId: (NSString*) originId targetId: (NSString*) targetId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: originId forName: @"originId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: targetId forName: @"targetId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"removeArtifactDependency" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) addSingleSelectChildField: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName fieldValues: (SDZArrayOf_xsd_string*) fieldValues parentFieldId: (NSString*) parentFieldId parentChildFieldValueMap: (SDZSoapNamedValues*) parentChildFieldValueMap helpText: (NSString*) helpText
	{
		return [self addSingleSelectChildField: handler action: nil sessionId: sessionId trackerId: trackerId fieldName: fieldName fieldValues: fieldValues parentFieldId: parentFieldId parentChildFieldValueMap: parentChildFieldValueMap helpText: helpText];
	}

	- (SoapRequest*) addSingleSelectChildField: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId fieldName: (NSString*) fieldName fieldValues: (SDZArrayOf_xsd_string*) fieldValues parentFieldId: (NSString*) parentFieldId parentChildFieldValueMap: (SDZSoapNamedValues*) parentChildFieldValueMap helpText: (NSString*) helpText
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldName forName: @"fieldName"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: fieldValues forName: @"fieldValues"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: parentFieldId forName: @"parentFieldId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: parentChildFieldValueMap forName: @"parentChildFieldValueMap"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: helpText forName: @"helpText"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"addSingleSelectChildField" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) deleteSeparator: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId layoutId: (NSString*) layoutId
	{
		return [self deleteSeparator: handler action: nil sessionId: sessionId trackerId: trackerId layoutId: layoutId];
	}

	- (SoapRequest*) deleteSeparator: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId layoutId: (NSString*) layoutId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: layoutId forName: @"layoutId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"deleteSeparator" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZOrderedTrackerFieldSoapList*.  */
	- (SoapRequest*) getOrderedTrackerFields: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
	{
		return [self getOrderedTrackerFields: handler action: nil sessionId: sessionId trackerId: trackerId];
	}

	- (SoapRequest*) getOrderedTrackerFields: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getOrderedTrackerFields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZOrderedTrackerFieldSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) reorderTrackerFields: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId layoutIds: (SDZArrayOf_xsd_string*) layoutIds
	{
		return [self reorderTrackerFields: handler action: nil sessionId: sessionId trackerId: trackerId layoutIds: layoutIds];
	}

	- (SoapRequest*) reorderTrackerFields: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerId: (NSString*) trackerId layoutIds: (SDZArrayOf_xsd_string*) layoutIds
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerId forName: @"trackerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: layoutIds forName: @"layoutIds"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"reorderTrackerFields" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}

	/* Returns SDZArtifactDetailSoapList*.  */
	- (SoapRequest*) getCrossTrackerArtifactList: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId containerId: (NSString*) containerId filters: (SDZArrayOf_tns1_SoapFilter*) filters selectedColumns: (SDZArrayOf_xsd_string*) selectedColumns
	{
		return [self getCrossTrackerArtifactList: handler action: nil sessionId: sessionId containerId: containerId filters: filters selectedColumns: selectedColumns];
	}

	- (SoapRequest*) getCrossTrackerArtifactList: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId containerId: (NSString*) containerId filters: (SDZArrayOf_tns1_SoapFilter*) filters selectedColumns: (SDZArrayOf_xsd_string*) selectedColumns
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: containerId forName: @"containerId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: filters forName: @"filters"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: selectedColumns forName: @"selectedColumns"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"getCrossTrackerArtifactList" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: [[SDZArtifactDetailSoapList alloc] autorelease]];
		[_request send];
		return _request;
	}

	/* Returns .  */
	- (SoapRequest*) reorderTrackers: (id <SoapDelegate>) handler sessionId: (NSString*) sessionId trackerIds: (SDZArrayOf_xsd_string*) trackerIds
	{
		return [self reorderTrackers: handler action: nil sessionId: sessionId trackerIds: trackerIds];
	}

	- (SoapRequest*) reorderTrackers: (id) _target action: (SEL) _action sessionId: (NSString*) sessionId trackerIds: (SDZArrayOf_xsd_string*) trackerIds
		{
		NSMutableArray* _params = [NSMutableArray array];
		
		[_params addObject: [[[SoapParameter alloc] initWithValue: sessionId forName: @"sessionId"] autorelease]];
		[_params addObject: [[[SoapParameter alloc] initWithValue: trackerIds forName: @"trackerIds"] autorelease]];
		NSString* _envelope = [Soap createEnvelope: @"reorderTrackers" forNamespace: self.namespace withParameters: _params withHeaders: self.headers];
		SoapRequest* _request = [SoapRequest create: _target action: _action service: self soapAction: @"" postData: _envelope deserializeTo: @""];
		[_request send];
		return _request;
	}


@end
	