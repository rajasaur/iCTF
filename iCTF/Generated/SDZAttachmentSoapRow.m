/*
	SDZAttachmentSoapRow.h
	The implementation of properties and methods for the SDZAttachmentSoapRow object.
	Generated by SudzC.com
*/
#import "SDZAttachmentSoapRow.h"

@implementation SDZAttachmentSoapRow
	@synthesize attachmentId = _attachmentId;
	@synthesize createdBy = _createdBy;
	@synthesize createdByFullname = _createdByFullname;
	@synthesize dateCreated = _dateCreated;
	@synthesize fileName = _fileName;
	@synthesize fileSize = _fileSize;
	@synthesize mimetype = _mimetype;
	@synthesize rawFileId = _rawFileId;
	@synthesize storedFileId = _storedFileId;
	@synthesize transactionId = _transactionId;

	- (id) init
	{
		if(self = [super init])
		{
			self.attachmentId = nil;
			self.createdBy = nil;
			self.createdByFullname = nil;
			self.dateCreated = nil;
			self.fileName = nil;
			self.fileSize = nil;
			self.mimetype = nil;
			self.rawFileId = nil;
			self.storedFileId = nil;
			self.transactionId = nil;

		}
		return self;
	}

	+ (SDZAttachmentSoapRow*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZAttachmentSoapRow*)[[[SDZAttachmentSoapRow alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.attachmentId = [Soap getNodeValue: node withName: @"attachmentId"];
			self.createdBy = [Soap getNodeValue: node withName: @"createdBy"];
			self.createdByFullname = [Soap getNodeValue: node withName: @"createdByFullname"];
			self.dateCreated = [Soap dateFromString: [Soap getNodeValue: node withName: @"dateCreated"]];
			self.fileName = [Soap getNodeValue: node withName: @"fileName"];
			self.fileSize = [Soap getNodeValue: node withName: @"fileSize"];
			self.mimetype = [Soap getNodeValue: node withName: @"mimetype"];
			self.rawFileId = [Soap getNodeValue: node withName: @"rawFileId"];
			self.storedFileId = [Soap getNodeValue: node withName: @"storedFileId"];
			self.transactionId = [Soap getNodeValue: node withName: @"transactionId"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"AttachmentSoapRow"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.attachmentId != nil) [s appendFormat: @"<attachmentId>%@</attachmentId>", [[self.attachmentId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.createdBy != nil) [s appendFormat: @"<createdBy>%@</createdBy>", [[self.createdBy stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.createdByFullname != nil) [s appendFormat: @"<createdByFullname>%@</createdByFullname>", [[self.createdByFullname stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.dateCreated != nil) [s appendFormat: @"<dateCreated>%@</dateCreated>", [Soap getDateString: self.dateCreated]];
		if (self.fileName != nil) [s appendFormat: @"<fileName>%@</fileName>", [[self.fileName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.fileSize != nil) [s appendFormat: @"<fileSize>%@</fileSize>", [[self.fileSize stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.mimetype != nil) [s appendFormat: @"<mimetype>%@</mimetype>", [[self.mimetype stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.rawFileId != nil) [s appendFormat: @"<rawFileId>%@</rawFileId>", [[self.rawFileId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.storedFileId != nil) [s appendFormat: @"<storedFileId>%@</storedFileId>", [[self.storedFileId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.transactionId != nil) [s appendFormat: @"<transactionId>%@</transactionId>", [[self.transactionId stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZAttachmentSoapRow class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.attachmentId != nil) { [self.attachmentId release]; }
		if(self.createdBy != nil) { [self.createdBy release]; }
		if(self.createdByFullname != nil) { [self.createdByFullname release]; }
		if(self.dateCreated != nil) { [self.dateCreated release]; }
		if(self.fileName != nil) { [self.fileName release]; }
		if(self.fileSize != nil) { [self.fileSize release]; }
		if(self.mimetype != nil) { [self.mimetype release]; }
		if(self.rawFileId != nil) { [self.rawFileId release]; }
		if(self.storedFileId != nil) { [self.storedFileId release]; }
		if(self.transactionId != nil) { [self.transactionId release]; }
		[super dealloc];
	}

@end
