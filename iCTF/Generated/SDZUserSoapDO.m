/*
	SDZUserSoapDO.h
	The implementation of properties and methods for the SDZUserSoapDO object.
	Generated by SudzC.com
*/
#import "SDZUserSoapDO.h"

@implementation SDZUserSoapDO
	@synthesize alternateEmail1 = _alternateEmail1;
	@synthesize alternateEmail2 = _alternateEmail2;
	@synthesize alternateEmail3 = _alternateEmail3;
	@synthesize email = _email;
	@synthesize fullName = _fullName;
	@synthesize lastLogin = _lastLogin;
	@synthesize licenseType = _licenseType;
	@synthesize locale = _locale;
	@synthesize organization = _organization;
	@synthesize restrictedUser = _restrictedUser;
	@synthesize status = _status;
	@synthesize superUser = _superUser;
	@synthesize timeZone = _timeZone;
	@synthesize username = _username;

	- (id) init
	{
		if(self = [super init])
		{
			self.alternateEmail1 = nil;
			self.alternateEmail2 = nil;
			self.alternateEmail3 = nil;
			self.email = nil;
			self.fullName = nil;
			self.lastLogin = nil;
			self.licenseType = nil;
			self.locale = nil;
			self.organization = nil;
			self.status = nil;
			self.timeZone = nil;
			self.username = nil;

		}
		return self;
	}

	+ (SDZUserSoapDO*) newWithNode: (CXMLNode*) node
	{
		if(node == nil) { return nil; }
		return (SDZUserSoapDO*)[[[SDZUserSoapDO alloc] initWithNode: node] autorelease];
	}

	- (id) initWithNode: (CXMLNode*) node {
		if(self = [super initWithNode: node])
		{
			self.alternateEmail1 = [Soap getNodeValue: node withName: @"alternateEmail1"];
			self.alternateEmail2 = [Soap getNodeValue: node withName: @"alternateEmail2"];
			self.alternateEmail3 = [Soap getNodeValue: node withName: @"alternateEmail3"];
			self.email = [Soap getNodeValue: node withName: @"email"];
			self.fullName = [Soap getNodeValue: node withName: @"fullName"];
			self.lastLogin = [Soap dateFromString: [Soap getNodeValue: node withName: @"lastLogin"]];
			self.licenseType = [Soap getNodeValue: node withName: @"licenseType"];
			self.locale = [Soap getNodeValue: node withName: @"locale"];
			self.organization = [Soap getNodeValue: node withName: @"organization"];
			self.restrictedUser = [[Soap getNodeValue: node withName: @"restrictedUser"] boolValue];
			self.status = [Soap getNodeValue: node withName: @"status"];
			self.superUser = [[Soap getNodeValue: node withName: @"superUser"] boolValue];
			self.timeZone = [Soap getNodeValue: node withName: @"timeZone"];
			self.username = [Soap getNodeValue: node withName: @"username"];
		}
		return self;
	}

	- (NSMutableString*) serialize
	{
		return [self serialize: @"UserSoapDO"];
	}
  
	- (NSMutableString*) serialize: (NSString*) nodeName
	{
		NSMutableString* s = [NSMutableString string];
		[s appendFormat: @"<%@", nodeName];
		[s appendString: [self serializeAttributes]];
		[s appendString: @">"];
		[s appendString: [self serializeElements]];
		[s appendFormat: @"</%@>", nodeName];
		return s;
	}
	
	- (NSMutableString*) serializeElements
	{
		NSMutableString* s = [super serializeElements];
		if (self.alternateEmail1 != nil) [s appendFormat: @"<alternateEmail1>%@</alternateEmail1>", [[self.alternateEmail1 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.alternateEmail2 != nil) [s appendFormat: @"<alternateEmail2>%@</alternateEmail2>", [[self.alternateEmail2 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.alternateEmail3 != nil) [s appendFormat: @"<alternateEmail3>%@</alternateEmail3>", [[self.alternateEmail3 stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.email != nil) [s appendFormat: @"<email>%@</email>", [[self.email stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.fullName != nil) [s appendFormat: @"<fullName>%@</fullName>", [[self.fullName stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.lastLogin != nil) [s appendFormat: @"<lastLogin>%@</lastLogin>", [Soap getDateString: self.lastLogin]];
		if (self.licenseType != nil) [s appendFormat: @"<licenseType>%@</licenseType>", [[self.licenseType stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.locale != nil) [s appendFormat: @"<locale>%@</locale>", [[self.locale stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.organization != nil) [s appendFormat: @"<organization>%@</organization>", [[self.organization stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<restrictedUser>%@</restrictedUser>", (self.restrictedUser)?@"true":@"false"];
		if (self.status != nil) [s appendFormat: @"<status>%@</status>", [[self.status stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		[s appendFormat: @"<superUser>%@</superUser>", (self.superUser)?@"true":@"false"];
		if (self.timeZone != nil) [s appendFormat: @"<timeZone>%@</timeZone>", [[self.timeZone stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];
		if (self.username != nil) [s appendFormat: @"<username>%@</username>", [[self.username stringByReplacingOccurrencesOfString:@"\"" withString:@"&quot;"] stringByReplacingOccurrencesOfString:@"&" withString:@"&amp;"]];

		return s;
	}
	
	- (NSMutableString*) serializeAttributes
	{
		NSMutableString* s = [super serializeAttributes];

		return s;
	}
	
	-(BOOL)isEqual:(id)object{
		if(object != nil && [object isKindOfClass:[SDZUserSoapDO class]]) {
			return [[self serialize] isEqualToString:[object serialize]];
		}
		return NO;
	}
	
	-(NSUInteger)hash{
		return [Soap generateHash:self];

	}
	
	- (void) dealloc
	{
		if(self.alternateEmail1 != nil) { [self.alternateEmail1 release]; }
		if(self.alternateEmail2 != nil) { [self.alternateEmail2 release]; }
		if(self.alternateEmail3 != nil) { [self.alternateEmail3 release]; }
		if(self.email != nil) { [self.email release]; }
		if(self.fullName != nil) { [self.fullName release]; }
		if(self.lastLogin != nil) { [self.lastLogin release]; }
		if(self.licenseType != nil) { [self.licenseType release]; }
		if(self.locale != nil) { [self.locale release]; }
		if(self.organization != nil) { [self.organization release]; }
		if(self.status != nil) { [self.status release]; }
		if(self.timeZone != nil) { [self.timeZone release]; }
		if(self.username != nil) { [self.username release]; }
		[super dealloc];
	}

@end
